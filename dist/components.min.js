class DOMComponent extends HTMLElement{static observedAttributes=["type"];static cachedComponents={};constructor(){super()}attributeChangedCallback(e,n,o){"type"===e&&this.fetchComponent(o).then(this.processComponent.bind(this))}fetchComponent(e){console.debug(`Requesting DOMComponent "${e}"`);const n=DOMComponent.cachedComponents[e];if(n)return n.then?(console.debug(`Request already in flight for DOMComponent ${e}`),n):(console.debug(`Returning cached copy for DOMComponent ${e}`),new Promise(((e,o)=>e(n))));{const n=`${COMPONENT_DIR}/${e}.html`;console.debug(`Fetching DOMComponent ${e} from "${n}"`);const o=fetch(n).then((e=>{if(!e.ok)throw new DOMException(`The requested DOMComponent is not found at ${n}`);return e.text()})).then((n=>(DOMComponent.cachedComponents[e]=n,n)));return DOMComponent.cachedComponents[e]=o,o}}processComponent(e){console.debug("Processing DOMComponent result:",e),this.innerHTML=e}}customElements.define("dom-component",DOMComponent);